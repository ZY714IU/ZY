# 最新完整的示例需查看 Quantumult X 里「配置文件」中的「示例」
# Telegram https://t.me/QuanXApp
# 图标 https://raw.githubusercontent.com/ZY714IU/ZY/main/QuantumultX/Icon/icon.json
# GeoIP https://raw.githubusercontent.com/Loyalsoldier/geoip/release/Country.mmdb
# “#” “;" “//” 是注释符号，去掉符号该行才生效
# UpdateTime   2023-04-30 11:50


[general]
# server_check_url，Quantumult X 使用 http head 方法对测试网址进行网页响应性测试(测试结果为通过该节点访问此网页获得 http 响应所需要的时间)来确认节点的可用性(由于 Trojan 协议为无响应校验协议，使得 http 检测方式即使获得了 http 响应，也不代表节点一定可用)，以下任选其一
server_check_url = http://cp.cloudflare.com/generate_204
//server_check_url = http://www.gstatic.com/generate_204
//server_check_url = http://www.qualcomm.cn/generate_204
# network_check_url，测试网络连通性
network_check_url = http://baidu.com
//network_check_url = http://bing.com
# 节点延迟测试超时参数，需小于 5000 毫秒(5秒)才生效
server_check_timeout = 2000
# 设置图标显示
profile_img_url = Quantumult_X.png
# 资源解析器 resource_parser，可用于自定义各类远程资源的转换，如节点、分流、复写 等，url 地址可远程，可本地 /iCloud (Quantumult X/Scripts 目录)
resource_parser_url = https://raw.githubusercontent.com/ZY714IU/ZY/main/QuantumultX/Scripts/resource-parser.js
# geo_location_checker，用于节点页面信息展示，识别节点地区为中文和显示国旗，显示 ip 地址，以下任选其一
geo_location_checker = http://ip-api.com/json/?lang=zh-CN, https://github.com/ZY714IU/ZY/raw/main/QuantumultX/Scripts/IP-API.js
//geo_location_checker = disabled
# 排除路由 excluded_routes，下列表中内容将不经过 Quantumult X 的处理，多个用英文逗号 ＂,＂ 分隔
excluded_routes = 0.0.0.0/8, 10.0.0.0/8, 10.10.10.1/24, 100.64.0.0/10, 127.0.0.0/8, 169.254.0.0/16, 172.16.0.0/12, 192.168.0.0/16, 192.168.1.0/16, 192.88.99.0/24, 192.0.0.0/24, 198.18.0.0/15, 198.51.100.0/24, 203.0.113.0/24, 224.0.0.0/4, 239.255.255.250/32, 255.255.255.255/32
# dns 排除列表，dns_exclusion_list, list 中的域名将不使用 fake-ip 方式, 其它域名则全部采用 fake-ip 及远程解析的模式
; 不使用 fake-ip 映射，可一定程度防止检测到使用代理, 多个用英文逗号 ＂,＂ 分隔。以下来自 https://github.com/VirgilClyne/GetSomeFries/wiki/
dns_exclusion_list = *.lan, cable.auth.com, *.msftconnecttest.com, *.msftncsi.com, network-test.debian.org, detectportal.firefox.com, resolver1.opendns.com, *.srv.nintendo.net, *.stun.playstation.net, xbox.*.microsoft.com, *.xboxlive.com, stun.*, global.turn.twilio.com, global.stun.twilio.com, localhost.*.qq.com, *.logon.battlenet.com.cn, *.logon.battle.net, *.blzstatic.cn, music.163.com, *.music.163.com, *.126.net, musicapi.taihe.com, music.taihe.com, songsearch.kugou.com, trackercdn.kugou.com, *.kuwo.cn, api-jooxtt.sanook.com, api.joox.com, joox.com, y.qq.com, *.y.qq.com, streamoc.music.tc.qq.com, mobileoc.music.tc.qq.com, isure.stream.qqmusic.qq.com, dl.stream.qqmusic.qq.com, aqqmusic.tc.qq.com, amobile.music.tc.qq.com, *.xiami.com, *.music.migu.cn, music.migu.cn, proxy.golang.org, *.mcdn.bilivideo.cn, *.cmpassport.com, id6.me, open.e.189.cn, mdn.open.wo.cn, opencloud.wostore.cn, auth.wosms.cn, *.jegotrip.com.cn, *.icitymobile.mobi, *.pingan.com.cn, *.cmbchina.com, pool.ntp.org, *.pool.ntp.org, ntp.*.com, time.*.com, ntp?.*.com, time?.*.com, time.*.gov, time.*.edu.cn, *.ntp.org.cn, PDC._msDCS.*.*, DC._msDCS.*.*, GC._msDCS.*.*

# udp 白名单，参数 udp_whitelist 从 ip 层控制 udp 数据是否需要舍弃，如舍弃，则该 udp 请求不会进入规则模块以及策略模块，tcp/udp 请求记录中也不会有相应的条目
; 留空则默认所有为端口，不在 udp 白名单列表中的端口，被丢弃处理(返回 icmp “端口不可达”信息)
//udp_whitelist = 1-442, 444-65535
# udp_drop 名单同白名单类似，但不会返回 icmp “端口不可达” 信息，drop 名单仅处理 whitelist 名单中的端口(YouTube 广告拦截需要丢弃 443 udp 端口，也可选择 udp_whitelist 白名单丢弃 443 端口)
udp_drop_list = 443
# icmp 自动回复
//icmp_auto_reply = true
# 指定 doh 请求所使用的 User-Agent
//doh_user_agent = Agent/1.0
; 指定服务器测试时所使用的 User-Agent
//server_check_user_agent = Agent/1.0
# 默认当 dns 层面某 domain 被 reject 时，将返回 loopback ip，你可以通过下面的参数
; 修改成为 no-error-no-answer，或者 nxdomain
//dns_reject_domain_behavior = loopback
# 参数 fallback_udp_policy 的值仅支持末端策略(末端策略为经由规则模块和策略模块后所命中的策略，例如direct、reject 以及节点，不支持内置策略 proxy 和其它自定义策略）
; 当 udp 请求经过规则模块以及策略模块后所命中的节点为Quantumult X 所不支持 udp 转发的节点(例如 VMess)，或命中的节点虽支持 udp 转发但节点配置未显示注明 udp-relay = true 的节点(例如 ss 或 ssr 且与服务器是否真实开启了 udp 转发无关)，则 fallback_udp_policy 会被使用，该参数默认值为 reject，即fallback_udp_policy = reject
; 注意! 如果您需要调整该参数的值为 direct，请务必清楚了解同一目标主机名 tcp 请求与 udp 请求的源地址不同所造成的隐私及安全风险
//fallback_udp_policy = direct
//fallback_udp_policy = reject
# 运行模式模块，running_mode_trigger 设置，即根据网络自动切换 分流/直连/全局代理 等模式
; running-mode-trigger 模式下，跟手动切换 直连/全局代理 等效，rewrite/task 模块始终会生效，比 ssid 策略组设置简单，比 ssid-suspend 更灵活
//running_mode_trigger = filter, filter, asus-5g:all_direct, asus:all_proxy
; 上述写法前两个 filter 先后表示在「数据蜂窝网络」跟「一般 Wi-Fi」下，走 filter 模式，后面则表示在 asus-5g 下切换为全局直连 all_direct，asus 切换为全局代理 all_proxy
; 如需使用，相应 ssid 换成你自己 Wi-Fi 名即可
# ssid_suspended_list，让 Quantumult X 在特定 Wi-Fi 网络下暂停工作(仅 task 模块会继续工作)，多个Wi-Fi用 “,” 连接
//ssid_suspended_list = Xiaomi-WiFi, Asus-Wifi
# 增强兼容性 ssid 列表，多个Wi-Fi用 “,” 连接
//enhanced_compatibility_ssid_list = Xiaomi-WiFi, Asus-Wifi


[dns]
# 以下来自 https://github.com/VirgilClyne/GetSomeFries/wiki/
# circumvent-ipv4-answer, circumvent-ipv6-answer 参数
; 支持参数 excluded_ssids，included_ssids 指定在特定 Wi-Fi 下 失效/生效
; 1，当并发向多个上游 dns 进行查询时，如响应最快的上游dns 抢答的结果命中了该条目，则 Quantumult XTunnel dns 模块会等待其他 dns 服务器的响应结果(如抢答的结果中至少有一个不属于该条目，则不会等待其他 dns 的响应，此时有效结果采用不属于该条目的所有记录)
; 2，所有上游 dns 返回的所有结果均命中该条目，则判定为 dns 查询失败
; 3，如配置的上游 dns 包含有去广告功能的 dns 服务器，请勿使用该参数
//circumvent-ipv4-answer = 127.0.0.1, 0.0.0.0
//circumvent-ipv6-answer = ::
# 如需使用 doh3 (dns over http/3)，请开启以下参数
prefer-doh3
# 禁用系统 dns (no-system) 以及 ipv6
no-system
//no-ipv6
# 如果有隐私方面考虑可使用 doh 或 doq，此时查询效率会有所降低，使用 doh 时只生效 doh-server
; 请注意使用 doh 或 doq 并不能防止dns泄露,只是加密了你的查询请求，防止 dns 泄露的正确方法是减少走 final 的请求
; doh (dns over https) 服务器以加密 https 协议进行 dns 解析请求，以免原始 dns 协议中用户的 dns 解析请求被窃听或者修改的问题(例如 MitM 达到保护用户隐私的目的)
; 设置 doh 服务器后，所有其他常规 dns 服务器设置将被忽略，当设置了多个 doh 服务器时，只会使用第一个，当使用的 doh 服务器不是基于 http/2 时，doh 将被暂时禁用
; 多个 doh 服务器应配置在同一行，以英文逗号 "," 分隔
; 腾讯 https://doh.pub/dns-query
; 阿里 https://dns.alidns.com/dns-query
doh-server = https://dns.alidns.com/dns-query, https://doh.pub/dns-query
# DNS服务器
; 腾讯 119.29.29.29/119.28.28.28
; 阿里 223.5.5.5/223.6.6.6
; 百度 180.76.76.76
server = 119.29.29.29
server = 223.5.5.5
server = 180.76.76.76
# 如指定 doh 服务，则上面的一般 dns 解析均失效，额外参数，在特定网络下禁用该 doh
//doh-server = xxx.com, excluded_ssids = ssid1, ssid2
; 支持多个 doh 并发，用英文逗号 ＂,＂ 分隔
//doh-server = xx1.com, xx2.com, excluded_ssids = ssid1, ssid2
//alias = /example.com/another-example.com
; 如指定 doq 服务，则 doh 以及其它 dns 解析均失效
//doq-server = quic://dns.adguard.com
//doq-server = quic://dns1.example.com, quic://dns2.example.com
//doq-server = quic://dns.adguard.com, excluded_ssids = ssid1
//doq-server = quic://dns.adguard.com, included_ssids = ssid2
# 指定域名分配 dns
//doh-server = /*.taobao.com/https://dns.alidns.com/dns-query
//doh-server = /*.alipay.com/https://dns.alidns.com/dns-query
//doh-server = /*.qq.com/https://doh.pub/dns-query
//doh-server = /*.weixin.qq.com/https://doh.pub/dns-query
//server = /*.jd.com/system
//server = /*.taobao.com/223.5.5.5
//server = /*.weixin.com/119.29.29.29
# Router Admin Panel
server = /miwifi.com/system
server = /tplogin.cn/system
server = /melogin.cn/system
server = /falogin.cn/system
server = /amplifi.lan/system
server = /orbilogin.com/system
server = /myrouter.local/system
server = /www.miwifi.com/system
server = /sila.razer.com/system
server = /router.asus.com/system
server = /routerlogin.net/system
server = /tplinklogin.net/system
server = /mediarouter.home/system
server = /router.synology.com/system
server = /LinksysSmartWiFi.com/system
server = /www.LinksysSmartWiFi.com/system
# 指定 ip 地址
//address = /mtalk.google.com/108.177.125.188
//address = /*testflight.apple.com/104.111.197.139
//address = /example6.com/[2001:8d3:8d3:8d3:8d3:8d3:8d3:8d3]


# 策略组 policy 将分流规则传过来的网络请求进行分发
; check-interval 默认间隔 600 秒(10分钟) 测速一次
; tolerance = 60，当前使用节点延迟和最新测速延迟最低的节点相差 60ms(毫秒) 以上则切换为最新的最低延迟节点，否则继续延用节点(默认为 0ms)
; img-url 参数用于指定策略组图标，可远程，也可本地/iCloud (Quantumult X/Images 路径下)(108*108 大小)
; DIRECT/PROXY/REJECT 则只能用本地图标，名字分别为DIRECT.png、PROXY.png、REJECT.png 放置于 Images 文件夹下即可生效(108*108 大小)
; final 如果所有策略均未被匹配到，则走此策略组
; static 手动选择想要的 策略组/节点
; available 指向候选服务器的第一个可用服务器(当策略被触发且策略结果不可用时，将立即启动并发 url 延迟测试
; round-robin 将按列表的顺序轮流使用其中的 节点
; dest-hash 随机负载均衡,但相同域名走固定 节点
; ssid 将根据你所设定的网络来自动切换 策略组/节点
; url-latency-benchmark 选取延迟最优节点，当用户在 Quantumult X 中手动启动 url 测试时，策略结果也会被更新
[policy]
static=Static, Available, HK, SG, US, JP, proxy, direct, img-url=Static.png
available=Available, resource-tag-regex=^((?!(mojie)).)*$, server-tag-regex=(?!.*(重置|套餐|到期|剩余|试用|防失联|长期|test)).*(), img-url=Auto.png
available=HK, resource-tag-regex=^((?!(mojie)).)*$, server-tag-regex=(?!.*(重置|套餐|到期|剩余|试用|防失联|长期|test)).*(🇭🇰|香港|HK|HongKong), img-url=HK.png
available=SG, resource-tag-regex=^((?!(mojie)).)*$, server-tag-regex=(?!.*(重置|套餐|到期|剩余|试用|防失联|长期|test)).*(🇸🇬|新加坡|狮城|SG|Singapore), img-url=SG.png
available=US, resource-tag-regex=^((?!(mojie)).)*$, server-tag-regex=(?!.*(重置|套餐|到期|剩余|试用|防失联|长期|test)).*(🇺🇸|美国|波特兰|达拉斯|俄勒冈|凤凰城|费利蒙|硅谷|拉斯维加斯|洛杉矶|圣何塞|圣克拉拉|西雅图|芝加哥|US|UnitedStates|American), img-url=US.png
available=JP, resource-tag-regex=^((?!(mojie)).)*$, server-tag-regex=(?!.*(重置|套餐|到期|剩余|试用|防失联|长期|test)).*(🇯🇵|日本|川日|东京|大阪|泉日|埼玉|沪日|深日|JP|Japan), img-url=JP.png
static=Speedtest, direct, Static, HK, SG, US, JP, proxy, img-url=Speedtest.png
static=Final, direct, Static, proxy, img-url=Final.png


# 本地服务器节点 server_local，详细配置请参考官方「示例」或者网络上查找相关教程
[server_local]


# 远程服务器订阅模块 server_remote，可直接订阅 ssr、ss 链接以及 Quantumult X 格式的 vmess/trojan/https 订阅
; tag 和 enabled 为可选参数，分别表示标签及开启状态，true 为开启，false 关闭
; update-interval 更新时间参数，单位 秒，默认更新时间为 24*60*60 = 86400 秒(24小时)
# opt-parser = true/false，用于控制是否对本订阅「开启资源解析器」，不写或者 false 表示不启用解析器
; 其它格式可用 opt-parser 参数开启解析器导入使用
; img-url 参数用于指定图标，格式要求为 108*108  的png 图片，可远程，可本地
[server_remote]


# 本地分流规则 filter_local，对于完全相同的规则，在没有开启「插入资源」的前提下本地的优先生效生效，可以在该远程规则的分流配置中添加参数 inserted-resource = true，或在图形界面的远程分流文件的设置中，打开「插入资源」开关
; 自带三策略；DIRECT 直连，PROXY 代理，REJECT 阻止
# 开启「分流匹配优化」选项，则匹配优先级如下
; host > host-suffix > host-keyword(wildcard) > geoip = ip-cidr > user-agent
; 完整域名匹配
//host, www.google.com, Static
; 域名后缀匹配
//host-suffix, baidu.com, direct
; 域名关键词匹配
//host-keyword, adsite, reject
; 域名通配符匹配
//host-wildcard, *abc.com, proxy
; user-agent
//user-agent, ?abc*, proxy
[filter_local]
# Google
host, www.google.com, Static
host-suffix, gmail.com, Static
host-suffix, google.cn, Static
host-suffix, google.com, Static
host-suffix, google.co.jp, Static
host-suffix, google.com.sg, Static
host-suffix, google.com.hk, Static
host-keyword, google, Static
; GitHub
host-suffix, github.io, Static
host-suffix, github.com, Static
host-suffix, githubapp.com, Static
host-suffix, githubassets.com, Static
host-suffix, githubusercontent.com, Static
host-keyword, github, Static
# LAN
host-suffix, local, direct
ip-cidr, 0.0.0.0/8, direct
ip-cidr, 10.0.0.0/8, direct
ip-cidr, 10.10.10.1/24, direct
ip-cidr, 100.64.0.0/10, direct
ip-cidr, 127.0.0.0/8, direct
ip-cidr, 169.254.0.0/16, direct
ip-cidr, 172.16.0.0/12, direct
ip-cidr, 192.0.0.0/24, direct
ip-cidr, 192.88.99.0/24, direct
ip-cidr, 192.168.0.0/16, direct
ip-cidr, 192.168.1.0/16, direct
ip-cidr, 198.18.0.0/15, direct
ip-cidr, 198.51.100.0/24, direct
ip-cidr, 203.0.113.0/24, direct
ip-cidr, 224.0.0.0/4, direct
ip-cidr, 239.255.255.250/32, direct
ip-cidr, 255.255.255.255/32, direct
ip6-cidr, ::/0, direct
ip6-cidr, ::1/128, direct
ip6-cidr, fc00::/7, direct
ip6-cidr, fe80::/10, direct
ip6-cidr, 2001:4860:4860::8888/32, direct
; 强制分流走蜂窝网络
//host-suffix, googleapis.com, proxy, force-cellular
; 让分流走蜂窝网络跟 Wi-Fi 中的优选结果
//host-suffix, googleapis.com, proxy, multi-interface
; 让分流走蜂窝网络跟 Wi-Fi 中的负载均衡，提供更大带宽出入接口
//host-suffix, googleapis.com, proxy, multi-interface-balance
; 指定分流走特定网络接口
//host-suffix, googleapis.com, proxy, via-interface = pdp_ip0
# %TUN% 参数，回传给Quantumult X 接口，可用于曲线实现代理链功能
//host-suffix, example.com, ServerA, via-interface = %TUN%
//ip-cidr, ServerA's ip Range, ServerB
//ip-asn, 132203, direct
# 支持如下的 geoip 库写法(需 geoip 库支持)
//geoip, netflix, proxy
# 当 ip 为中国地区时走直连，如采用域名(China)或IP(ChinaIPs)池，则注释掉 //geoip, cn, direct
geoip, cn, direct
# Final 兜底规则，已有规则(远程以及本地)以外的网络活动请求将走 Final 指定的 节点/策略，请根据自己的需求来选择 直连 或 节点/策略，这里即是 Final, Final
Final, Final


# 远程分流规则订阅 filter_remote
; 远程分流模块，可使用 force-policy 来强制使用策略偏好，替换远程规则内所指定的策略组
; tag 和 enabled 为可选参数，分别表示标签及开启状态，true 开启，false 关闭
; update-interval 为更新时间参数，单位 秒，默认更新时间为 24*60*60 = 86400 秒(24小时)
; opt-parser = true/false，用于控制是否对本订阅「开启资源解析器」，不写或者 false 表示不启用解析器
[filter_remote]
Filters.snippet, tag=Filters, update-interval=172800, opt-parser=false, inserted-resource=true, enabled=true
Speedtest.snippet, tag=Speedtest, force-policy=Speedtest, update-interval=172800, opt-parser=false, inserted-resource=true, enabled=true
https://raw.githubusercontent.com/ZY714IU/ZY/main/QuantumultX/Rules/Apple.list, tag=Apple, force-policy=direct, update-interval=172800, opt-parser=false, inserted-resource=true, enabled=true
https://raw.githubusercontent.com/ZY714IU/ZY/main/QuantumultX/Rules/Microsoft.list, tag=Microsoft, force-policy=direct, update-interval=172800, opt-parser=false, inserted-resource=true, enabled=true
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/QuantumultX/China/China.list, tag=China, force-policy=direct, update-interval=172800, opt-parser=false, inserted-resource=true, enabled=true
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/QuantumultX/Global/Global.list, tag=Global, force-policy=Static, update-interval=172800, opt-parser=false, enabled=true


# 本地重写规则 rewrite_local，包含主机名 hostname 以及重写 rewrite 规则，详细配置请参考官方「示例」或者网络上查找相关教程
; reject       策略返回 http 状态码 404，不附带任何额外内容
; reject-200   策略返回 http 状态码 200，不附带任何额外内容
; reject-img   策略返回 http 状态码 200，同时附带1px gif
; reject-dict  策略返回 http 状态码 200，同时附带一个空的 json 对象
; reject-array 策略返回 http 状态码 200，同时附带一个空的 json 数组
[rewrite_local]
# 阿里系请求，否则高德地图去广告不生效 AMap|Cainiao
^http?:\/\/amdc\.m\.taobao\.com\/amdc\/mobileDispatch$ AMap|Cainiao url-and-header reject-dict
# NewBing 将 Safari 伪装成 Chrome 以使用 BingAI
; @NobyDa，@ddgksf2013
^https?:\/\/www\.bing\.com\/(search|new|web) url request-header (\r\nUser-Agent:.+?)\w+\/[\d\.]+(\r\n) request-header $1AppleWebKit/537.36 Chrome/110.0 Safari/537.36 Edg/110.0$2
# Q-Search //hostname = duckduckgo.com, www.bing.com 
; https://raw.githubusercontent.com/ddgksf2013/Rewrite/master/Html/Q-Search.conf
; Safari 内输入以下格式命令快速指定搜索引擎
;【命令+空格+关键词】或者【关键词+空格+命令】
; 注意! 请更改 Safari 默认搜索为 DuckDuckGO
; 请勿修改下面文件排序，否则可能会失效
### ===== 翻译 ===== ###
# tc xxx (Google译至中)
^https:\/\/duckduckgo.com\/\?q=tc\+([^&]+).+ url 302 https://translate.google.com/#view=home&op=translate&sl=auto&tl=zh-CN&text=$1
^https:\/\/duckduckgo.com\/\?q=([^+]+)\+tc.+ url 302 https://translate.google.com/#view=home&op=translate&sl=auto&tl=zh-CN&text=$1
; te xxx (Google译至英)
^https:\/\/duckduckgo.com\/\?q=te\+([^&]+).+ url 302 https://translate.google.com/#view=home&op=translate&sl=auto&tl=en&text=$1
^https:\/\/duckduckgo.com\/\?q=([^+]+)\+te.+ url 302 https://translate.google.com/#view=home&op=translate&sl=auto&tl=en&text=$1
### ===== 社区 ===== ###
; tt  xxx (头条)
^https:\/\/duckduckgo.com\/\?q=tt\+([^&]+).+ url 302 https://so.toutiao.com/search?keyword=$1
^https:\/\/duckduckgo.com\/\?q=([^+]+)\+tt.+ url 302 https://so.toutiao.com/search?keyword=$1
; db  xxx (豆瓣)
^https:\/\/duckduckgo.com\/\?q=db\+([^&]+).+ url 302 https://m.douban.com/search?query=$1
^https:\/\/duckduckgo.com\/\?q=([^+]+)\+db.+ url 302 https://m.douban.com/search?query=$1
; zh  xxx (知乎)
^https:\/\/duckduckgo.com\/\?q=zh\+([^&]+).+ url 302 http://www.zhihu.com/search?q=$1
^https:\/\/duckduckgo.com\/\?q=([^+]+)\+zh.+ url 302 http://www.zhihu.com/search?q=$1
; wb  xxx (微博)
^https:\/\/duckduckgo.com\/\?q=wb\+([^&]+).+ url 302 https://s.weibo.com/weibo/$1
^https:\/\/duckduckgo.com\/\?q=([^+]+)\+wb.+ url 302 https://s.weibo.com/weibo/$1
; wx  xxx (微信)
^https:\/\/duckduckgo.com\/\?q=wx\+([^&]+).+ url 302 https://weixin.sogou.com/weixinwap?query=$1
^https:\/\/duckduckgo.com\/\?q=([^+]+)\+wx.+ url 302 https://weixin.sogou.com/weixinwap?query=$1
; tw  xxx (Twitter)
^https:\/\/duckduckgo.com\/\?q=tw\+([^&]+).+ url 302 https://twitter.com/search?q=$1
^https:\/\/duckduckgo.com\/\?q=([^+]+)\+tw.+ url 302 https://twitter.com/search?q=$1
; gh  xxx (GitHub)
^https:\/\/duckduckgo.com\/\?q=gh\+([^&]+).+ url 302 https://github.com/search?q=$1
^https:\/\/duckduckgo.com\/\?q=([^+]+)\+gh.+ url 302 https://github.com/search?q=$1
### ===== 视频 ===== ###
; yt  xxx (YouTube)
^https:\/\/duckduckgo.com\/\?q=yt\+([^&]+).+ url 302 https://www.youtube.com/results?search_query=$1
^https:\/\/duckduckgo.com\/\?q=([^+]+)\+yt.+ url 302 https://www.youtube.com/results?search_query=$1
; bl  xxx (哔哩哔哩)
^https:\/\/duckduckgo.com\/\?q=bl\+([^&]+).+ url 302 https://m.bilibili.com/search?keyword=$1
^https:\/\/duckduckgo.com\/\?q=([^+]+)\+bl.+ url 302 https://m.bilibili.com/search?keyword=$1
; ph  xxx (PornHub)
^https:\/\/duckduckgo.com\/\?q=ph\+([^&]+).+ url 302 https://cn.pornhub.com/video/search?search=$1
^https:\/\/duckduckgo.com\/\?q=([^+]+)\+ph.+ url 302 https://cn.pornhub.com/video/search?search=$1
### ===== 搜索 ===== ###
; bd  xxx (百度搜索)
^https:\/\/duckduckgo.com\/\?q=bd\+([^&]+).+ url 302 https://www.baidu.com/s?wd=$1
^https:\/\/duckduckgo.com\/\?q=((.(?!bd))+)\+bd.+ url 302 https://www.baidu.com/s?wd=$1
; wk  xxx (维基搜索)
^https:\/\/duckduckgo.com\/\?q=wk\+([^&]+).+ url 302 https://zh.wikipedia.org/wiki/$1
^https:\/\/duckduckgo.com\/\?q=([^+]+)\+wk.+ url 302 https://zh.wikipedia.org/wiki/$1
; wz  xxx (无追搜索)
^https:\/\/duckduckgo.com\/\?q=wz\+([^&]+).+ url 302 https://www.wuzhuiso.com/s?q=$1
^https:\/\/duckduckgo.com\/\?q=([^+]+)\+wz.+ url 302 https://www.wuzhuiso.com/s?q=$1
; by  xxx (必应)
^https:\/\/duckduckgo.com\/\?q=bi\+([^&]+).+ url 302 https://www.bing.com/search?q=$1
^https:\/\/duckduckgo.com\/\?q=([^+]+)\+bi.+ url 302 https://www.bing.com/search?q=$1
; ios xxx (苹果应用搜索)
^https:\/\/duckduckgo.com\/\?q=ios\+([^&]+).+ url 302 https://www.qimai.cn/search/index/search/$1
^https:\/\/duckduckgo.com\/\?q=([^+]+)\+ios.+ url 302 https://www.qimai.cn/search/index/search/$1
;     xxx（无指令默认为 Google）
^https:\/\/duckduckgo.com\/\?q=([^&]+).+ url 302 https://www.google.com/search?q=$1


# 远程重写订阅 rewrite_remote，包含主机名 hostname 以及重写 rewrite 规则
; update-interval 为更新时间参数，单位 秒，默认更新时间为 24*60*60 = 86400 秒(24小时)
; opt-parser = true/false，用于控制是否对订阅开启资源解析器，不写或者 false 表示不启用解析器
[rewrite_remote]
test.snippet, tag=test, update-interval=172800, opt-parser=false, inserted-resource=true, enabled=true
https://raw.githubusercontent.com/ZY714IU/ZY/main/QuantumultX/Rewrites/weibo.conf, tag=weibo, update-interval=172800, opt-parser=true, enabled=true
https://raw.githubusercontent.com/ZY714IU/ZY/main/QuantumultX/Rewrites/bilibili.conf, tag=bilibili, update-interval=172800, opt-parser=false, enabled=true
https://github.com/ZY714IU/ZY/raw/main/QuantumultX/Rewrites/zhihu.conf, tag=zhihu, update-interval=172800, opt-parser=false, enabled=true
https://github.com/ZY714IU/ZY/raw/main/QuantumultX/Rewrites/others.conf, tag=others, update-interval=172800, opt-parser=false, enabled=true


# task_local 脚本，详细配置请参考官方「示例」或者网络上查找相关教程
; 包含3种类型，cron 定时任务，ui(event-interaction)交互脚本，网络切换(event-network)脚本
; js 文件放于 iCloud 或者本机的 Quantumult X/Scripts 路径下
; tag 参数为 task 命名标识，img-url 参数用于指定task 的图标(108*108)
# cron 定时任务示例如下；1点3点7点…执行 task
//0 0 1,3,7,9,11,13,15,17,19 * * ? 
# ui 交互查询脚本示范，首页长按 节点/策略组 唤出
//event-interaction https://raw.githubusercontent.com/KOP-XIAO/QuantumultX/master/Scripts/streaming-ui-check.js, tag=流媒体-解锁查询, img-url=checkmark.seal.system, enabled=true
# 网络切换/变化时触发 的脚本类型，示例如下
//event-network sample-taks.js
[task_local]
event-interaction https://github.com/ZY714IU/ZY/raw/main/QuantumultX/Scripts/streaming-ui-check.js, tag=streaming-ui-check, img-url=play.circle.fill.system, enabled=true

# 部署一个本地 http 服务器，并使用 JavaScript 进行数据处理
; 输入变量为 $reqeust.url、$reqeust.path、$reqeust.headers、$reqeust.body
; 使用 $done 输出像 $done({status:"HTTP/1.1 200 OK"}, headers:{}, body:"here is a string")这样的返回响应
; 此外，您还可以使用签名或任何其他验证方法来验证请求是否合法
; 部署后您应该通过 http://127.0.0.1:9999/your-path/your-api/. 进行访问，服务器默认监听端口为 9999，您可以在 ui 中进行更改。
; http_backend，详细配置请参考官方「示例」或者网络上查找相关教程
; Boxjs 设置，改为使用 http_backend 方式，访问地址改为 http://127.0.0.1:9999，更新配置后长按风车「更新」，然后重启代理
; BoxJs 相关教程参考 https://chavyleung.gitbook.io/boxjs/
[http_backend]


# MitM (Man-in-the-middle attack 中间人攻击)
; 只有 hostname 中的 TLS SNI 或目标地址将被 MitM 处理
; 默认情况下，当为 https 请求启用 MitM 时，Quantumult X 会从原站点获取证书(证书会被缓存)，保留大部分需要的原始证书信息，并使用 MitM 的 root CA 重新签名，这是推荐的(也是比较兼容的) MitM 证书创建方式
; 注意! 您应该始终保护您的 CA 密码和 p12 的私密性
[mitm]
# hostname 为主机名，多个用英文逗号 "," 分隔
hostname = www.bing.com, duckduckgo.com
# 跳过证书验证；服务器证书与域名不一致或过期也会继续请求
skip_validating_cert = true
# 一个 ip 绑定多个域名时，通过 SNI 区分访问
force_sni_domain_name = true
# 当使用 Quantumult X 在 M 芯片的 Mac 设备上作为局域网网关时，使用下面的参数来跳过某些特定设备的 MitM 需求
//skip_src_ip = 192.168.4.50, 192.168.4.51
# 当多个不同的 tcp 连接(非域名类请求)的目标 ip 不同，但这些连接的 TSL 握手 SNI 字段相同时，如需跳过其中某些连接的 MitM hostname 匹配过程，可使用以下参数
//skip_dst_ip = 123.44.55.4
# 开启 MitM 需要自行在 Quantumult X 中「生成证书→ 安装 → 信任」
; passphrase 和 p12 为 证书&主机名 部分，更新配置前可把旧配置中 passphrase 和 p12 代码拷贝下来，导入新的配置文件把内容粘贴在对应位置以不用重装证书
; 以下为证书参数，可去 ui 界面自行生成并安装证书，会在此生成对应信息
passphrase = 
p12 = 
