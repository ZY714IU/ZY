# > 最新完整的示例需查看QuantumultX里「配置文件」中的「示例」
# > 图标：https://raw.githubusercontent.com/ZY714IU/ZY/main/Icon/icon.json
# > GEOIP：https://raw.githubusercontent.com/Loyalsoldier/geoip/release/Country.mmdb
# > “#”“;”“//” 是注释符号，去掉符号该行才生效

[general]
# > server_check_url，QuantumultX使用http head方法对测试网址进行网页响应性测试(测试结果为通过该节点访问此网页获得http响应所需要的时间)来确认节点的可用性(由于Trojan协议为无响应校验协议，使得http检测方式即使获得了http响应，也不代表节点一定可用)，以下任选其一
server_check_url = http://cp.cloudflare.com/generate_204
# > network_check_url，测试网络连通性
network_check_url = http://bing.com
# > 节点延迟测试超时参数，需小于5000毫秒(5秒)才生效
server_check_timeout = 3000
# > 设置图标显示
profile_img_url = https://github.com/ZY714IU/ZY/raw/main/Icon/QuantumultX.png
# > 资源解析器resource_parser，可用于自定义各类远程资源的转换，如节点、分流、复写等，url地址可远程，可本地/iCloud(QuantumultX/Scripts目录)
resource_parser_url = https://raw.githubusercontent.com/ZY714IU/ZY/main/Scripts/resource_parser.js
# > geo_location_checker，用于节点页面信息展示，识别节点地区为中文和显示国旗，显示ip地址，以下任选其一
geo_location_checker = http://ip-api.com/json/?lang=zh-CN, https://raw.githubusercontent.com/ZY714IU/ZY/main/Scripts/ip_api.js
//geo_location_checker=disabled
# > 排除路由excluded_routes，下列表中内容将不经过QuantumultX的处理，多个用英文逗号,分隔
excluded_routes = 0.0.0.0/8, 10.0.0.0/8, 10.10.10.1/24, 100.64.0.0/10, 127.0.0.0/8, 169.254.0.0/16, 172.16.0.0/12, 192.168.0.0/16, 192.168.1.0/16, 192.88.99.0/24, 192.0.0.0/24, 198.18.0.0/15, 198.51.100.0/24, 203.0.113.0/24, 224.0.0.0/4, 239.255.255.250/32, 255.255.255.255/32
# > dns排除列表，dns_exclusion_list，list中的域名将不使用fake-ip方式，其它域名则全部采用fake-ip及远程解析的模式
# > 不使用fake-ip映射，可一定程度防止检测到使用代理，多个用英文逗号,分隔
dns_exclusion_list = *.lan,cable.auth.com, localhost.*.qq.com, *.mcdn.bilivideo.cn, open.e.189.cn, mdn.open.wo.cn, opencloud.wostore.cn, auth.wosms.cn, *.icitymobile.mobi, *.cmbchina.com
# > udp白名单，参数udp_whitelist从ip层控制udp数据是否需要舍弃，如舍弃，则该udp请求不会进入规则模块以及策略模块，tcp/udp请求记录中也不会有相应的条目
# > 留空则默认所有为端口，不在udp白名单列表中的端口，被丢弃处理(返回icmp“端口不可达”信息)
//udp_whitelist = 1-442,444-65535
# > udp_drop名单同白名单类似，但不会返回icmp“端口不可达”信息，drop名单仅处理whitelist名单中的端口(YouTube广告拦截需要禁止443 udp端口，也可选择udp_whitelist白名单禁止443 udp端口)
udp_drop_list = 443
# > icmp自动回复
icmp_auto_reply = true
# > 指定doh请求所使用的User-Agent
//doh_user_agent = Agent/1.0
# > 指定服务器测试时所使用的User-Agent
//server_check_user_agent = Agent/1.0
# > 默认当dns层面某domain被reject时，将返回 loopback ip，你可以通过下面的参数
# > 修改成为no-error-no-answer，或者nxdomain
//dns_reject_domain_behavior = nxdomain
# > 参数fallback_udp_policy的值仅支持末端策略(末端策略为经由规则模块和策略模块后所命中的策略，例direct、reject以及节点，不支持内置策略PROXY和其它自定义策略）
# > 当udp请求经过规则模块以及策略模块后所命中的节点为QuantumultX所不支持udp转发的节点(例如VMess)，或命中的节点虽支持UDP转发但节点配置未显示注明udp-relay=true的节点(例如ss或ssr且与服务器是否真实开启了udp转发无关)，则fallback_udp_policy会被使用，该参数默认值为reject，即fallback_udp_policy=reject
# > 注意！如果您需要调整该参数的值为direct，请务必清楚了解同一目标主机名tcp请求与udp请求的源地址不同所造成的隐私及安全风险
fallback_udp_policy = direct
//fallback_udp_policy = reject
# > 运行模式模块，running_mode_trigger设置，即根据网络自动切换分流/直连/全局代理等模式
# > running-mode-trigger模式下，跟手动切换直连/全局代理等效，rewrite/task模块始终会生效，比ssid策略组设置简单，比ssid-suspend更灵活
//running_mode_trigger = filter, filter, asus-5g:all_DIRECT, asus:all_PROXY
# > 上述写法前两个filter先后表示在「数据蜂窝网络」跟「一般 Wi-Fi」下，走filter模式，后面则表示在asus-5g下切换为全局直连all_DIRECT，asus切换为全局代理 all_PROXY
# > 如需使用，相应ssid换成你自己Wi-Fi名即可
# > ssid_suspended_list，让QuantumultX在特定Wi-Fi网络下暂停工作(仅task模块会继续工作)，多个Wi-Fi用英文逗号,连接
//ssid_suspended_list = Xiaomi-WiFi, Asus-Wifi
# > 增强兼容性ssid列表，多个Wi-Fi用英文逗号,连接
//enhanced_compatibility_ssid_list = Xiaomi-WiFi, Asus-Wifi

[dns]
# > circumvent-ipv4-answer,circumvent-ipv6-answer参数
# > 支持参数excluded_ssids，included_ssids指定在特定Wi-Fi下失效/生效
# > 1，当并发向多个上游dns进行查询时，如响应最快的上dns抢答的结果命中了该条目，则QuantumultX Tunnel dns模块会等待其他dns服务器的响应结果(如抢答的结果中至少有一个不属于该条目，则不会等待其他dns的响应，此时有效结果采用不属于该条目的所有记录)
# > 2，所有上游dns返回的所有结果均命中该条目，则判定为dns查询失败
# > 3，如配置的上游dns包含有去广告功能的dns服务器，请勿使用该参数
circumvent-ipv4-answer = 127.0.0.1, 0.0.0.0
circumvent-ipv6-answer = ::
# > 如需使用doh3(dns over http/3)，请开启以下参数
prefer-doh3
# > 禁用系统dns以及ipv6
//no-system
//no-ipv6
# > 如果有隐私方面考虑可使用doh或doq，此时查询效率会有所降低，使用doh时只生效doh-server
# > doh(dns over https)服务器以加密https协议进行dns解析请求，以免原始dns协议中用户的dns解析请求被窃听或者修改的问题(例如MitM达到保护用户隐私的目的)
# > 请注意使用doh或doq并不能防止dns泄露，只是加密了你的查询请求，防止dns泄露的正确方法是减少走final的请求
# > 设置doh服务器后，所有其他常规dns服务器设置将被忽略，当设置了多个doh服务器时，只会使用第一个，当使用的doh服务器不是基于http/2时，doh将被暂时禁用
# > 多个doh服务器应配置在同一行，以英文逗号,分隔
# > 腾讯 https://doh.pub/dns-query
# > 阿里 https://dns.alidns.com/dns-query
doh-server = https://dns.alidns.com/dns-query, https://doh.pub/dns-query
# > dns服务器
# > 腾讯 119.29.29.29/119.28.28.28
# > 阿里 223.5.5.5/223.6.6.6
server = 119.29.29.29
server = 223.5.5.5
# > 如指定doh服务，则上面的一般dns解析均失效，额外参数，在特定网络下禁用该doh
# doh-server = xxx.com, excluded_ssids = SSID1, SSID2
# > 1.0.29版本后支持多个doh并发
# doh-server = xx1.com,xx2.com, excluded_ssids = SSID1, SSID2
# > 1.0.29版本后支持alias映射类型
# alias = /example.com/another-example.com
# > 指定域名分配dns
//doh-server = /*.taobao.com/https://dns.alidns.com/dns-query
//doh-server = /*.alipay.com/https://dns.alidns.com/dns-query
//doh-server = /*.qq.com/https://doh.pub/dns-query
//doh-server = /*.weixin.qq.com/https://doh.pub/dns-query
//server = /*.jd.com/system
//server = /*.taobao.com/223.5.5.5
//server = /*.weixin.com/119.29.29.29
# > 如指定doq服务，则doh以及其它dns解析均失效
//doq-server = quic://dns.adguard.com
//doq-server = quic://dns1.example.com, quic://dns2.example.com
//doq-server = quic://dns.adguard.com, excluded_ssids = ssid1
//doq-server = quic://dns.adguard.com, included_ssids=ssid2
# > Router Admin Panel
server = /miwifi.com/system
server = /tplogin.cn/system
server = /melogin.cn/system
server = /falogin.cn/system
server = /amplifi.lan/system
server = /orbilogin.com/system
server = /myrouter.local/system
server = /www.miwifi.com/system
server = /sila.razer.com/system
server = /router.asus.com/system
server = /routerlogin.net/system
server = /tplinklogin.net/system
server = /mediarouter.home/system
server = /router.synology.com/system
server = /LinksysSmartWiFi.com/system
server = /www.LinksysSmartWiFi.com/system
# > 指定ip地址
//address = /mtalk.google.com/108.177.125.188
//address = /*testflight.apple.com/104.111.197.139
//address = /example6.com/[2001:8d3:8d3:8d3:8d3:8d3:8d3:8d3]

# > 策略组policy将分流规则传过来的网络请求进行分发
# > check-interval默认间隔600秒(10分钟)测速一次
# > tolerance=60，当前使用节点延迟和最新测速延迟最低的节点相差60ms(毫秒)以上则切换为最新的最低延迟节点，否则继续延用节点(默认为0ms)
# > img-url参数用于指定策略组图标，可远程，也可本地/iCloud(QuantumultX/Images路径下)(108*108大小)
# > DIRECT/PROXY/REJECT则只能用本地图标，名字分别为DIRECT.png、PROXY.png、REJECT.png 放置于Images 文件夹下即可生效(108*108大小)
# > final兜底策略，所有策略均未被匹配到，则走此策略组
# > static手动选择想要的策略组/节点
# > available指向候选服务器的第一个可用服务器(当策略被触发且策略结果不可用时，将立即启动并发url延迟测试
# > round-robin将按列表的顺序轮流使用其中的节点
# > dest-hash随机负载均衡，但相同域名走固定节点
# > ssid将根据你所设定的网络来自动切换策略组/节点
# > url-latency-benchmark选取延迟最优节点，当用户在QuantumultX中手动启动url测试时，策略结果也会被更新
[policy]
static=Static, SG, HK, US, JP, proxy, direct, img-url=https://github.com/ZY714IU/ZY/raw/main/Icon/Static.png
available=SG, resource-tag-regex=^((?!(排除)).)*$, server-tag-regex=(?!.*(重置|套餐|到期|剩余|试用|防失联|长期|test)).*(🇸🇬|新加坡|狮城|SG|Singapore), img-url=https://raw.githubusercontent.com/ZY714IU/ZY/main/Icon/SG.png
available=HK, resource-tag-regex=^((?!(排除)).)*$, server-tag-regex=(?!.*(重置|套餐|到期|剩余|试用|防失联|长期|test)).*(🇭🇰|香港|HK|HongKong), img-url=https://raw.githubusercontent.com/ZY714IU/ZY/main/Icon/HK.png
available=US, resource-tag-regex=^((?!(排除)).)*$, server-tag-regex=(?!.*(重置|套餐|到期|剩余|试用|防失联|长期|test)).*(🇺🇸|美国|波特兰|达拉斯|俄勒冈|凤凰城|费利蒙|硅谷|拉斯维加斯|洛杉矶|圣何塞|圣克拉拉|西雅图|芝加哥|US|UnitedStates|American), img-url=https://raw.githubusercontent.com/ZY714IU/ZY/main/Icon/US.png
available=JP, resource-tag-regex=^((?!(排除)).)*$, server-tag-regex=(?!.*(重置|套餐|到期|剩余|试用|防失联|长期|test)).*(🇯🇵|日本|川日|东京|大阪|泉日|埼玉|沪日|深日|JP|Japan), img-url=https://raw.githubusercontent.com/ZY714IU/ZY/main/Icon/JP.png

# > 本地服务器节点server_local，详细配置请参考官方「示例」或者网络上查找相关教程
[server_local]

# > 远程服务器订阅模块server_remote，可直接订阅ssr、ss链接以及QuantumultX格式的vmess、trojan、https订阅
# > tag和enabled为可选参数，分别表示标签及开启状态，true开启，false关闭
# > update-interval更新时间参数，单位秒，默认更新时间为24*60*60=86400秒(24小时)
# > opt-parser=true/false，用于控制是否对本订阅「开启资源解析器」，不写或者false表示不启用解析器
# > 其它格式可用opt-parser参数开启解析器导入使用
# > img-url参数用于指定图标，格式要求为108*108的png图片，可远程，可本地
[server_remote]

# > 本地分流规则filter_local，对于完全相同的规则，在没有开启「插入资源」的前提下本地的优先生效生效，可以在该远程规则的分流配置中添加参数 inserted-resource=true或在图形界面的远程分流文件的设置中，打开「插入资源」开关
# > 自带三策略；DIRECT直连、PROXY代理、REJECT阻止
# > 开启「分流匹配优化」选项，则匹配优先级如下
# > HOST > HOST-SUFFIX > HOST-KEYWORD(WILDCARD) > GEOIP = IP-CIDR > USER-AGENT
# > 完整域名匹配
//HOST,www.google.com,Static
# > 域名后缀匹配
//HOST-SUFFIX,baidu.com,DIRECT
# > 域名关键词匹配
//HOST-KEYWORD,adsite,reject
# > 域名通配符匹配
//HOST-WILDCARD,*abc.com,PROXY
# > USER-AGENT
//USER-AGENT,?abc*,PROXY
[filter_local]
# > Google
HOST,www.google.com,Static
HOST-SUFFIX,gmail.com,Static
HOST-SUFFIX,google.cn,Static
HOST-SUFFIX,google.com,Static
HOST-SUFFIX,google.co.jp,Static
HOST-SUFFIX,google.com.sg,Static
HOST-SUFFIX,google.com.hk,Static
HOST-KEYWORD,google,Static
# > GitHub
HOST-SUFFIX,github.io,Static
HOST-SUFFIX,github.com,Static
HOST-SUFFIX,githubapp.com,Static
HOST-SUFFIX,githubassets.com,Static
HOST-SUFFIX,githubusercontent.com,Static
HOST-KEYWORD,github,Static
# > LAN
HOST-SUFFIX,local,DIRECT
IP-CIDR,0.0.0.0/8,DIRECT
IP-CIDR,10.0.0.0/8,DIRECT
IP-CIDR,10.10.10.1/24,DIRECT
IP-CIDR,100.64.0.0/10,DIRECT
IP-CIDR,127.0.0.0/8,DIRECT
IP-CIDR,169.254.0.0/16,DIRECT
IP-CIDR,172.16.0.0/12,DIRECT
IP-CIDR,192.0.0.0/24,DIRECT
IP-CIDR,192.88.99.0/24,DIRECT
IP-CIDR,192.168.0.0/16,DIRECT
IP-CIDR,192.168.1.0/16,DIRECT
IP-CIDR,198.18.0.0/15,DIRECT
IP-CIDR,198.51.100.0/24,DIRECT
IP-CIDR,203.0.113.0/24,DIRECT
IP-CIDR,224.0.0.0/4,DIRECT
IP-CIDR,239.255.255.250/32,DIRECT
IP-CIDR,255.255.255.255/32,DIRECT
IP6-CIDR,::/0,DIRECT
IP6-CIDR,::1/128,DIRECT
IP6-CIDR,fc00::/7,DIRECT
IP6-CIDR,fe80::/10,DIRECT
IP6-CIDR,2001:4860:4860::8888/32,DIRECT
# > 强制分流走蜂窝网络
//HOST-SUFFIX,googleapis.com,PROXY,force-cellular
# > 让分流走蜂窝网络跟Wi-Fi中的优选结果
//HOST-SUFFIX,googleapis.com,PROXY,multi-interface
# > 让分流走蜂窝网络跟Wi-Fi中的负载均衡，提供更大带宽出入接口
//HOST-SUFFIX,googleapis.com,PROXY,multi-interface-balance
# > 指定分流走特定网络接口
//HOST-SUFFIX,googleapis.com,PROXY,via-interface=pdp_ip0
# > %TUN%参数，回传给QuantumultX接口，可用于曲线实现代理链功能
//HOST-SUFFIX,example.com,ServerA,via-interface=%TUN%
//IP-CIDR,ServerA's IP Range,ServerB
//IP-ASN,132203,DIRECT
# > 支持如下的GEOIP库写法(需GEOIP库支持)
//GEOIP,netflix,PROXY
# > 当ip为中国地区时走直连
GEOIP,CN,DIRECT
# > FINAL兜底规则，已有规则(远程以及本地)以外的网络活动请求将走FINAL指定的节点/策略，请根据自己的需求来选择 直连或节点/策略，这里即是FINAL,Static
FINAL,Static

# > 远程分流规则订阅filter_remote
# > 远程分流模块，可使用force-policy来强制使用策略偏好，替换远程规则内所指定的策略组
# > tag和enabled为可选参数，分别表示标签及开启状态，true开启，false关闭
# > update-interval为更新时间参数，单位秒，默认更新时间为24*60*60=86400秒(24小时)
# > opt-parser=true/false，用于控制是否对本订阅「开启资源解析器」，不写或者false表示不启用解析器
[filter_remote]
Others.snippet, tag=Others, update-interval=604800, opt-parser=false, inserted-resource=true, enabled=true
https://raw.githubusercontent.com/ZY714IU/ZY/main/Rules/China.list, tag=China, force-policy=direct, update-interval=172800, opt-parser=false, inserted-resource=true, enabled=true
https://raw.githubusercontent.com/ZY714IU/ZY/main/Rules/Global.list, tag=Global, force-policy=Static, update-interval=604800, opt-parser=false, enabled=true

# > 本地重写规则rewrite_local，包含主机名hostname以及重写rewrite规则，详细配置请参考官方「示例」或者网络上查找相关教程
# > reject       策略返回http状态码404，不附带任何额外内容
# > reject-200   策略返回http状态码200，不附带任何额外内容
# > reject-img   策略返回http状态码200，同时附带1px gif
# > reject-dict  策略返回http状态码200，同时附带一个空的json对象
# > reject-array 策略返回http状态码200，同时附带一个空的json数组
[rewrite_local]
# > 阿里系请求AMap|Cainiao
^https?://amdc.m.taobao.com/amdc/mobileDispatch AMap|Cainiao url-and-header reject-dict
# > NewBing将Safari伪装成Chrome以使用BingAI，需要将NewBing App地区设置为美国
^https?://www.bing.com/(search|new|web) url request-header (\r\nUser-Agent:.+?)\w+/[\d.]+(\r\n) request-header $1AppleWebKit/537.36 Chrome/110.0 Safari/537.36 Edg/110.0$2 
# > Safari内输入以下格式命令快速指定搜索引擎
# > 【命令+空格+关键词】或者【关键词+空格+命令】
# > 注意! 请更改Safari默认搜索为DuckDuckGO
# > bd xxx(百度)
^https?://duckduckgo.com/\?q=bd\+([^&]+).+ url 302 https://www.baidu.com/s?wd=$1
^https?://duckduckgo.com/\?q=((.(?!bd))+)\+bd.+ url 302 https://www.baidu.com/s?wd=$1
# > bi xxx(必应)
^https?://duckduckgo.com/\?q=bi\+([^&]+).+ url 302 https://www.bing.com/search?q=$1
^https?://duckduckgo.com/\?q=([^+]+)\+bi.+ url 302 https://www.bing.com/search?q=$1
# >    xxx（无指令默认为谷歌）
^https?://duckduckgo.com/\?q=([^&]+).+ url 302 https://www.google.com/search?q=$1

# > 远程重写订阅rewrite_remote，包含主机名hostname以及重写rewrite规则
# > update-interval为更新时间参数，单位秒，默认更新时间为24*60*60=86400秒(24小时)
# > opt-parser=true/false，用于控制是否对订阅开启资源解析器，不写或者false表示不启用解析器
[rewrite_remote]
Test.snippet, tag=Test, update-interval=-1, opt-parser=false, inserted-resource=true, enabled=true
https://raw.githubusercontent.com/ZY714IU/ZY/main/Rewrites/Others.conf, tag=Others, update-interval=172800, opt-parser=false, enabled=true

# > task_local脚本，详细配置请参考官方「示例」或者网络上查找相关教程
# > 包含3种类型，cron定时任务，ui(event-interaction)交互脚本，网络切换(event-network)脚本
# > js 文件放于iCloud或者本机的QuantumultX/Scripts路径下
# > tag参数为task命名标识，img-url参数用于指定task的图标(108*108)
# > cron定时任务示例如下；1点3点7点…执行task
//0 0 1,3,7,9,11,13,15,17,19 * * ? 
# > ui交互查询脚本示范，首页长按节点/策略组唤出
# > 网络切换/变化时触发的脚本类型，示例如下
//event-network sample-taks.js
[task_local]
event-interaction https://github.com/ZY714IU/ZY/raw/main/Scripts/streaming_ui_check.js,tag=streaming_ui_check,img-url=play.circle.fill.system,enabled=true

# > 部署一个本地http服务器，并使用JavaScript进行数据处理
# > 输入变量为$reqeust.url、$reqeust.path、$reqeust.headers、$reqeust.body
# > 使用$done输出像$done({status:"HTTP/1.1 200 OK"},headers:{},body:"here is a string")这样的返回响应
# > 此外，您还可以使用签名或任何其他验证方法来验证请求是否合法
# > 部署后您应该通过http://127.0.0.1:9999/your-path/your-api/. 进行访问，服务器默认监听端口为 9999，您可以在ui中进行更改。
# > http_backend，详细配置请参考官方「示例」或者网络上查找相关教程
# > Boxjs设置，改为使用http_backend方式，访问地址改为http://127.0.0.1:9999，更新配置后长按风车「更新」，然后重启代理
[http_backend]

# > MitM(Man-in-the-middle attack中间人攻击)
# > 只有hostname中的TLS SNI或目标地址将被MitM处理
# > 默认情况下，当为https请求启用MitM时，QuantumultX会从原站点获取证书(证书会被缓存)，保留大部分需要的原始证书信息，并使用MitM的root CA重新签名，这是推荐的(也是比较兼容的)MitM证书创建方式
# > 注意！您应该始终保护您的CA密码和p12的私密性
[mitm]
# > hostname为主机名，多个用英文逗号,分隔
hostname = www.bing.com, duckduckgo.com
# > 跳过证书验证；服务器证书与域名不一致或过期也会继续请求
skip_validating_cert = true
# > 一个ip绑定多个域名时，通过SNI区分访问
force_sni_domain_name = true
# > 当使用QuantumultX在M芯片的Mac设备上作为局域网网关时，使用下面的参数来跳过某些特定设备的MitM需求
//skip_src_ip = 192.168.4.50,192.168.4.51
# > 当多个不同的tcp连接(非域名类请求)的目标ip不同，但这些连接的TSL握手SNI字段相同时，如需跳过其中某些连接的MitM hostname匹配过程，可使用以下参数
//skip_dst_ip = 123.44.55.4
# > 开启MitM需要自行在QuantumultX中「生成证书→安装→信任」
# > passphrase和p12为证书&主机名部分，更新配置前可把旧配置中passphrase和p12代码拷贝下来，导入新的配置文件把内容粘贴在对应位置以不用重装证书
# > 以下为证书参数，可去ui界面自行生成并安装证书，会在此生成对应信息
passphrase = 
p12 = 